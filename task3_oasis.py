# -*- coding: utf-8 -*-
"""Task3_OASIS

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OT-4ADEAkHAkvzmTwf-UPZpBTWnvktCZ

OASIS_Task_3
             Car Price Prediction with Machine Learning
"""

#improting the needed libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import warnings
warnings.simplefilter("ignore")

#importing the dataset from google drive
df = pd.read_csv('/content/drive/MyDrive/CarPrice_Assignment.csv')
df.head()

#Checking for the null values in the dataset
df.isnull().sum()

df.info()

print(df.describe())

df.CarName.unique()

#So to predict the car price we take price column from the data set to predict 
import seaborn as sns

#distribution of the price column
sns.set_style("dark")
plt.figure(figsize=(15, 10))
sns.distplot(df.price)
plt.show()

#checking for the corelation of all the features of the cars form the dataset
print(df.corr())

plt.figure(figsize=(20, 15))
correlations = df.corr()
sns.heatmap(correlations, cmap="RdYlBu_r", annot=True)
plt.show()

#Training the Car Price Prediction Model
predict = "price"
data = df[["symboling", "wheelbase", "carlength", 
             "carwidth", "carheight", "curbweight", 
             "enginesize", "boreratio", "stroke", 
             "compressionratio", "horsepower", "peakrpm", 
             "citympg", "highwaympg", "price"]]
x = np.array(data.drop([predict], 1))
y = np.array(data[predict])

#Training the Car Price Prediction Model
#Spliting the dataset into training and testing 
from sklearn.model_selection import train_test_split
xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2)

#Training the model and making predictions using the DecisionTreeRegressor
from sklearn.tree import DecisionTreeRegressor
model = DecisionTreeRegressor()
model.fit(xtrain, ytrain)
predictions = model.predict(xtest)
print(predictions)

from sklearn.metrics import mean_absolute_error
model.score(xtest, predictions)